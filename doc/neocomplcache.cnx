*neocomplcache.txt*	Vim的终极自动补全系统

版本: 5.3
作者: Shougo <Shougo.Matsu@gmail.com>
翻译：minyang <minyangyang[At]163.com>
许可证: MIT 许可  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS						*neocomplcache-contents*

简介			|neocomplcache-introduction|
安装			|neocomplcache-install|
界面			|neocomplcache-interface|
   命令			  |neocomplcache-commands|
   参数			  |neocomplcache-variables|
   键映射		  |neocomplcache-key-mappings|
例子			|neocomplcache-examples|
插件			|neocomplcache-plugins|
  用户插件		  |neocomplcache-user-plugins|
创建插件		|neocomplcache-create-plugin|
目标			|neocomplcache-todo|
错误			|neocomplcache-bugs|
更新历史		|neocomplcache-changelog|

==============================================================================
简介						*neocomplcache-introduction*

*neocomplcache* 将关键词缓存至缓冲区内里来完成关键词自动补全。我用自己的方法完成这个插件，因为不太喜欢关键词补全。补全还包括了 Vim 构成类型。 neocomplcache可以灵活定制。不幸的是neocomplcache可能要比其它插件使用更多的内存。

							*neocomplcache-version5*
在neocomplcache Ver.5中更改了大量的变量名，所以不兼容旧版本. 如果你想升级旧版本请使用Mr.thinca编写的脚本.
http://gist.github.com/422503

==============================================================================
安装							*neocomplcache-install*

1: 解压文件到你的 Vim 目录
   (通常Unix是 ~/.vim/ Windows则是Program Files/Vim/vimfiles ). 
2: 执行 |:NeoComplCacheEnable| 命令或者将 
let g:neocomplcache_enable_at_startup = 1
加入到时你的.vimrc. 

==============================================================================
INTERFACE						*neocomplcache-interface*

------------------------------------------------------------------------------
COMMANDS 						*neocomplcache-commands*

:NeoComplCacheEnable					*:NeoComplCacheEnable*
		验证和初始化neocomplcache。
		注意: 常规缓存会消失

:NeoComplCacheDisable					*:NeoComplCacheDisable*
		禁用及清理neocomplcache。

:NeoComplCacheToggle					*:NeoComplCacheToggle*
		此命令更改neocomplcache的锁定状态.
		此命令锁定neocomplcache时, 自动补全会失效。

:Neco [{anim-number}] 					*:Neco*
		密秘.

:NeoComplCacheLock					*:NeoComplCacheLock*
		此命令锁定neocomplcache.
		此命令锁定neocomplcache时,但还可以手动补全。
		此命令锁定状态是局部缓冲区的。

:NeoComplCacheUnLock					*:NeoComplCacheUnLock*
		解锁neocomplcache。

:NeoComplCacheAutoCompletionLength			*:NeoComplCacheAutoCompletionLength*
		更改自动补全开的的长度。
		这个长度是局部缓冲区的。

:NeoComplCacheCachingBuffer [bufname]			*:NeoComplCacheCachingBuffer*
		缓存 [bufname] 到缓冲区.  注意: 缓存内容多时相当花费时间。
		当 [bufname] 省略时会选择当前缓冲区。
		当 [bufname] 缓冲区未被缓存时,  
		将会实施一个简单的缓存

:NeoComplCacheCachingSyntax [filetype]			*:NeoComplCacheCachingSyntax*
		缓存 [filetype] (文件类型)的高亮语法.
		当 [filetype] 省略时，使用当前缓冲区文件类型的高亮语法.

:NeoComplCacheCachingDictionary [filetype]		*:NeoComplCacheCachingDictionary*
		缓存 [filetype] （文件类型）使用的字典.
		当 [filetype] 省略时，使用当前缓冲区文件类型的字典。

:NeoComplCacheCachingTags [filetype]			*:NeoComplCacheCachingTags*
		缓存 [filetype] （文件类型）的标签文件.
		当 [filetype] 省略时，使用当前缓冲区文件类型的标签。

:NeoComplCacheCachingInclude [filetype]			*:NeoComplCacheCachingInclude*
		缓存 [filetype] （文件类型）包括的文件.
		当 [filetype] 省略时，使用当前缓冲区的文件类型。

:NeoComplCacheCachingDisable [bufname]			*:NeoComplCacheCachingDisable*
		禁用 [bufname] 缓冲区的缓存。
		这个缓冲区缓存将被删除。
		当 [bufname] 省略时，删除当前缓冲区缓存。

:NeoComplCacheCachingEnable [bufname]			*:NeoComplCacheCachingEnable*
		启用 [bufname] 缓冲区的缓存。
		当 [bufname] 省略时，会缓存当前缓冲区。

:NeoComplCachePrintSource [bufname]			*:NeoComplCachePrintSource*
		输出 [bufname] 缓冲区的缓存到当前缓冲区.
		这个命令用于除错。
		当 [bufname] 省略时，选定当前缓存。
		除错时用的命令，普通用户一般不会用到。

:NeoComplCacheOutputKeyword [bufname]			*:NeoComplCacheOutputKeyword*
		将 [bufname] 缓冲区缓存的关键字，写入到当前缓冲区中。
		当 [bufname] 省略时，选定当前缓冲区. 
		当你使用自己的字典文件时，
		将会非常方便。
		
		 
:NeoComplCacheCreateTags [bufname]			*:NeoComplCacheCreateTags*
		从 [bufname] 缓冲区中建立标签。
		当 [bufname] 省略时，选定当前缓冲区。

:NeoComplCacheEditSnippets [filetype]			*:NeoComplCacheEditSnippets*
		编辑 [filetype] （文件类型）代码段(snippets).  
		当 [filetype] （文件类型）省略时，则编辑当前缓冲区文件类型的代码段(snippets)。
		当这里没有 [filetype] 代码段(snippets)文件, 它会自动生成一个新的。 
		这个命令编辑的代码段(snippets)文件位于 g:neocomplcache_snippets_dir设定的目录里。
		当你保存代码段(snippets)后，它将自动重新缓存。

:NeoComplCacheEditRuntimeSnippets [filetype]		*:NeoComplCacheEditRuntimeSnippets*
		编辑 [filetype] （文件类型）实时代码段(snippets).  
		当 [filetype] 省略时，则编辑当前缓冲区文件类型的实时代码段(snippets)。
		当这里没有 [filetype] 代码段(snippets)文件, 它会自动生成一个新的。
		这个命令编辑的实时代码段(snippets)用于代码段(snippets)补全。
		当你保存代码段(snippets)后，它将自动重新缓存。

:NeoComplCachePrintSnippets [filetype]			*:NeoComplCachePrintSnippets*
		打印 [filetype] 文件类型的代码段(snippets).
		当 [filetype] 省略时，打印当前缓冲区文件类型的代码段(snippets)。

------------------------------------------------------------------------------
VARIABLES 						*neocomplcache-variables*

g:neocomplcache_enable_at_startup			*g:neocomplcache_enable_at_startup*
		这个变量控制是否在打开Vim时启用neocomplcache。
		这个变量应在.vimrc设定。
		
		因为默认值为0,neocomplcache是禁用，无效的。
		想用的话，必须手动打开。
	

g:neocomplcache_max_list				*g:neocomplcache_max_list*
		这个变量控制弹出菜单的候选行数.  
		大于设定值的项目将不显示。
		
		默认值是 100.

g:neocomplcache_max_keyword_width			*g:neocomplcache_max_keyword_width*
		这个变量控制弹出菜单关键词的宽度。   
		大于设定值的项目将不显示。		
		
		默认值是 50.

g:neocomplcache_max_filename_width			*g:neocomplcache_max_filename_width*
		这个变量控制弹出菜单文件名的宽度。
		大于设定值的项目将不显示。

		默认值是 15.

g:neocomplcache_auto_completion_start_length		*g:neocomplcache_auto_completion_start_length*
		这个变量控制输入多少个字符时自动弹出补全菜单。		
		默认值是 2.

g:neocomplcache_manual_completion_start_length		*g:neocomplcache_manual_completion_start_length*
		这个变量控制输入多少个字符才能弹出手动补全菜单。
		当减少这个变量值时使用会方便些,
		但你通过 <C-h> 或 <BS> 删除字符时，弹出补全菜单时间会变长。
		
		默认值是 2.

g:neocomplcache_min_keyword_length			*g:neocomplcache_min_keyword_length*
		在一个缓冲区或字典文件里, 这个变量控制
		弹出补全菜单关键词最小长度。
		
		默认值是 4.

g:neocomplcache_min_syntax_length			*g:neocomplcache_min_syntax_length*
		在语法文件里, 这个变量控制 
		弹出补全菜单关键词最小长度。
		
		默认值是 4.

g:neocomplcache_enable_ignore_case			*g:neocomplcache_enable_ignore_case*
		当neocomplcache查补全时,这个变量控制
		是否让neocomplcache忽略大小写。
		如果是1, neocomplcache将忽略大小写。
		
		默认值是 'ignorecase'.

g:neocomplcache_enable_smart_case			*g:neocomplcache_enable_smart_case*
		当输入含有大写字母时, neocomplcache将
		区分大小写。
		
		默认值是 0.

g:neocomplcache_disable_auto_complete			*g:neocomplcache_disable_auto_complete*
		这个变量控制是否停用自动补全。
		如果是1, 自动补全将失效，
	        但可以通过<C-x><C-u>手动补全。
		
		默认值是 0.

g:neocomplcache_enable_wildcard				*g:neocomplcache_enable_wildcard*
		这个变量控制是否让neocomplcache 
		输入保存时接受通配符 '*' 。
		
		默认值是 1.

g:neocomplcache_enable_quick_match			*g:neocomplcache_enable_quick_match*
		当输入保存时, 这个变量控制是否让
		补全菜单项目前加入字母和数字,输入时用'-'相连。
		当你输入'ho-a'时,neocomplcache 选择候选项目'a'.
		
		默认值是 0.

g:neocomplcache_enable_cursor_hold_i			*g:neocomplcache_enable_cursor_hold_i*
		这个变量控制是否让neocomplcache使用 |CursorHoldI| 事件
		当完成候选时。
		
		默认值是 0.

g:neocomplcache_enable_auto_select			*g:neocomplcache_enable_auto_select*
		当 neocomplcache 显示候选项目时, 这个变量控制是否让
		neocomplcache 自动选择第一个候选项目。
		如果你启用这个变量，neocomplcache的
		补全方法就类似于|AutoComplPop|.
		
		默认值是 0.

g:neocomplcache_enable_auto_delimiter			*g:neocomplcache_enable_auto_delimiter*
		这个变量控制是否让neocomplcache自动插入分隔符。 
		举个例子, /(filename) 或 #(Vim script).
		
		默认值是 0.

g:neocomplcache_cursor_hold_i_time			*g:neocomplcache_cursor_hold_i_time*
	        这个变量定义自动补全菜单显示的时间，单位是毫秒。	
		
		默认值是 300.

g:neocomplcache_enable_camel_case_completion		*g:neocomplcache_enable_camel_case_completion*
		当你输入大写字母时, 这个变量控制是否让
		neocomplcache进行模糊搜索可能性词语  例如，
		当输入AE时会匹配ArgumentsException。
		
		默认值是 0.

g:neocomplcache_enable_underbar_completion		*g:neocomplcache_enable_underbar_completion*
		当你输入 _, 这个变量控制是否让
		nocomplcache进行模糊搜索匹配的词。例如,
		当输入'p_h'时会匹配'public_html'。 		
		默认值是 0.

g:neocomplcache_enable_caching_message			*g:neocomplcache_enable_caching_message*
		当生成缓存时, 这个变量控制neocomplcache
		是否在命令行显示信息.
		
		默认值是 1.

g:neocomplcache_caching_limit_file_size			*g:neocomplcache_caching_limit_file_size*
		这个变量作用是据文件大小值决定是否生成缓存，
		大于这个值的文件将不生成缓存。
		
		默认值是 500000.

g:neocomplcache_disable_caching_buffer_name_pattern	*g:neocomplcache_disable_caching_buffer_name_pattern*
		这个变量设定缓冲区名的模板. 如果匹配的话,
		neocomplcache将不会生成该缓冲区的缓存。
		当这个变量值是空字符串时, neocomplcache将忽略此变量。
		
		默认值是 ''.

g:neocomplcache_lock_buffer_name_pattern		*g:neocomplcache_lock_buffer_name_pattern*
		这个变量设缓冲区名的模板. 如果匹配的话,
		neocomplcache不会自动补全。 
		当这个变量值是空字符串时, neocomplcache将忽略此变量。
		
		默认值是 ''.

g:neocomplcache_force_caching_buffer_name_pattern	*g:neocomplcache_force_caching_buffer_name_pattern*
		这个变量设定一个缓冲区名称模板。如果匹配
		neocomplcache将忽略 'readonly' or 'nomodifiable' 选项
		并生成该缓冲区缓存。当值为空字符串时， 
		neocomplcache 将忽略此变量。
		
		默认值是 ''.

g:neocomplcache_disable_auto_select_buffer_name_pattern	*g:neocomplcache_auto_select_buffer_name_pattern*
		这个变量设定一个缓冲区名称模板。如果匹配
		neocomplcache 禁用|g:neocomplcache_enable_auto_select|。
		当值为空字符串时，neocomplcache 将忽略此变量。
		
		默认值是 ''.

g:neocomplcache_snippets_dir				*g:neocomplcache_snippets_dir*
		这个变量指定用户定义的代码段(snippets)文件的目录。多个目录用','隔开。
		这里没有定义目录时 neocomplcache忽略此变量。
		用户定义的代码段(snippets)文件会常规代码段(snippets)文件之后读取。
		它是一个可写的代码段(snippets)副本。
		
		用户不指定目录，这个变量无效。

g:neocomplcache_temporary_dir				*g:neocomplcache_temporary_dir*
		这个变量指定 neocomplcache 产生的临时文件保存的目录. 
	        当没有指定目录时，它会自动生成。举例,
		keyword_complete.vim 保存 keyword 缓存在
		'keyword_cache' 子目录。
		
		默认值是 '~/.neocon'.

g:neocomplcache_keyword_patterns			*g:neocomplcache_keyword_patterns*
		这个字典记录关键模板的正则表达式去识别光标前关键词.  
		形式相似于 |g:neocomplcache_keyword_patterns|.
		
		因为太复杂, 其初始值参考位于autoload/neocomplcache.vim
		的neocomplcache#enable()函数 
>
		" Examples:
		if !exists('g:neocomplcache_keyword_patterns')
		  let g:neocomplcache_keyword_patterns = {}
		endif
		let g:neocomplcache_keyword_patterns['default'] = '\h\w*'
<
g:neocomplcache_next_keyword_patterns			*g:neocomplcache_next_keyword_patterns*
		这个字典记录关键词模板完成补全。
		This is appointed in regular expression every file type.
		
		因为太复杂，其初始值参考在XX的XX函数, refer to neocomplcache#enable() in
		autoload/neocomplcache.vim for the initial value.

g:neocomplcache_omni_patterns				*g:neocomplcache_omni_patterns*
		这个字典记录Omni completion关键词模板 Omni completion.
		This is appointed in regular expression every file type.
		如果模板未定义, neocomplcache不会调用|omnifunc|。举例, 
		ruby and php omnifunc 是禁用的,
		因为它他太慢。
		
		因为太复杂，其初始值参考在autoload/neocomplcache/sources/omni_complete.vim
		的s:source.initialize()函数
		 		for the initial value.
>
		" Examples:
		if !exists('g:neocomplcache_omni_patterns')
		let g:neocomplcache_omni_patterns = {}
		endif
		let g:neocomplcache_omni_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
		let g:neocomplcache_omni_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
<
g:neocomplcache_tags_filter_patterns			*g:neocomplcache_tags_filter_patterns*
		这个字典记录关键词模板过滤标签补全菜单的候选项目。举例, 
		它可以排除以 _开头的文件类型是 C/C++的项目。
		
		因为太复杂，其初始值参考在autoload/neocomplcache.vim 
		的neocomplcache#enable()函数		for the initial value.

g:neocomplcache_same_filetype_lists			*g:neocomplcache_same_filetype_lists*
		它是一个字典,用于交互联系文件类型。
		当你交互联系 c 和 cpp 时非常有效率。
		
		因为太复杂，其初始值参考在autoload/neocomplcache.vim 
		的neocomplcache#enable()函数

g:neocomplcache_dictionary_filetype_lists		*g:neocomplcache_dictionary_filetype_lists*
		它是一个字典，用于联系一个字典文件和文件类型。
		字典的键值是文件类型和指向目录文件的路径，多个路径用‘,’隔开的.  
		如果这个变量值为空, neocomplcache 使用 'dictionary' 选项。
		当你发送 "text" 键值, 你将在文字模式里委派字典文件。
		
		默认值是 {}.

g:neocomplcache_filetype_include_lists			*g:neocomplcache_filetype_include_lists*
		它是一个字典定义一个文件类型，它还包含其它文件类型。
	        它的项目是一个字典列表。它的键值和值如下。
		"filetype" : 包含的文件类型。
		"start" : 文件类型开始的模板。
		"end" : 文件类型结束的模板。你可以用 \1 
		匹配文件类型开始的模板
>
		" 例子:
		if !exists('g:neocomplcache_filetype_include_lists')
		let g:neocomplcache_filetype_include_lists= {}
		endif
		let g:neocomplcache_filetype_include_lists.perl6 = [{'filetype' : 'pir', 'start' : 'Q:PIR\s*{', 'end' : '}'}]
		let g:neocomplcache_filetype_include_lists.vim = 
		\[{'filetype' : 'python', 'start' : '^\s*python <<\s*\(\h\w*\)', 'end' : '^\1'}]
<
		
		因为太复杂，其初始值参考在autoload/neocomplcache.vim的
		neocomplcache#enable()函数
		

g:neocomplcache_text_mode_filetypes			*g:neocomplcache_text_mode_filetypes*
		它是一个字典去定义文字模式文件类型。
		这个字典的键值是文件类型，值是数字。如果值是非零对应的文件类型是文字模式。
		在文字模式里,neocomplcache支持英文字写。
		
		因为太复杂，其初始值参考在autoload/neocomplcache.vim 的
		neocomplcache#enable()函数
		for the initial value.

g:neocomplcache_disable_select_mode_mappings		*g:neocomplcache_disable_select_mode_mappings*
		这个变量控制是否在选择模式下
		禁用展开代码段(snippets)的组合键。  
		建议最好打开这个变量。
			
		默认值是 1.

g:neocomplcache_ctags_program				*g:neocomplcache_ctags_program*
		ctags 命令的路径.
		
		默认值是 "ctags".

g:neocomplcache_ctags_arguments_list			*g:neocomplcache_ctags_arguments_list*
		它是一个字符串字典用于设定ctags命令的参数， 
		当 buffer_complete 和 include_complete 用到ctags 命令时。 
		这个字典的键值是文件类型。
				
		因为太复杂，其初始值参考在autoload/neocomplcache.vim 
		的neocomplcache#enable() 函数


g:neocomplcache_include_paths				*g:neocomplcache_include_paths*
		它是一个变量去枚举每个文件类型包含文件的路径。
		当没有路径时, 默认的'path' 将被使用。
		详细请参考'path' 的描述。
		它是一个字符串字典用于假定文件类型键值。
		
		因为太复杂，其初始值参考在autoload/neocomplcache/sources/include_complete.vim
		的s:source.initialize()函数
		
		                
g:neocomplcache_include_exprs				*g:neocomplcache_include_exprs*
		它是一个字符串行分析的表达式，用于获取一个包含文件的名称。
		当没有设定时，'includeexpr' 将被使用。
		详细请参考 'includeexpr' 的描述。
		它是一个字符串字典用于假定文件类型键值。
		
		因为太复杂，其初始值参考在autoload/neocomplcache/sources/include_complete.vim 
		的s:source.initialize()函数
		
		                
g:neocomplcache_include_patterns			*g:neocomplcache_include_patterns*
		这个变量委派命令的模板。
		当未设定时, 'include' 将被使用。
		详细请参考 'include' 的描述。
		它是一个字符串字典用于假定文件类型键值。
		
		因为太复杂，其初始值参考在autoload/neocomplcache/sources/include_complete.vim 
		的s:source.initialize()函数



g:neocomplcache_member_prefix_patterns			*g:neocomplcache_member_prefix_patterns*
		这个变量委派关键词模板去完成对像补全在
		include_complete 和 tags_complete 和 buffer_complete。
		这是委派每个文件类型的正则表达式。
		
		因为太复杂，其初始值参考在autoload/neocomplcache.vim的
		neocomplcache#enable()函数


g:neocomplcache_delimiter_patterns			*g:neocomplcache_delimiter_patterns*
		这个变量委派一个分隔符正则表达式去自动完成一个功能。
		这是委派每个文件类型 
		正则表达式的字符串列表。
>
		" 例子:
		if !exists('g:neocomplcache_delimiter_patterns')
		let g:neocomplcache_delimiter_patterns= {}
		endif
		let g:neocomplcache_delimiter_patterns.vim = ['#']
		let g:neocomplcache_delimiter_patterns.cpp = ['::']
<
		因为太复杂，其初始值参考在autoload/neocomplcache.vim 
		的neocomplcache#enable()函数
		 

g:neocomplcache_quick_match_patterns			*g:neocomplcache_quick_match_patterns*
		这个变量记录一个模板，用于快速匹配列表。
		这个模板用于匹配不同文件类型快速匹配的连接符。
		使用默认输入模板，你可以设为'default'。
		
		默认值是 { 'default' : '-' }.

g:neocomplcache_quick_match_table			*g:neocomplcache_quick_match_table*
		它是一个输入字母和快速匹配列表的候选表格。
		
		因为太复杂，其初始值参考在refer to plugin/neocomplcache.vim
		

g:neocomplcache_omni_functions				*g:neocomplcache_omni_functions*
		这个字典委派 |omni_complete| 调用函数。
		键值是 |&filetype|. 如果
		g:neocomplcache_omni_function_list[|&filetype|] 未定义,
		|omni_complete| 将调用 |omnifunc|.
		
		默认值是 {}.

g:neocomplcache_vim_completefuncs			*g:neocomplcache_vim_completefuncs*
		这个字典委派|vim_complete| 调用函数，
		当完成自定义和自定义列表命令时.
		键值是命令名。值是函数名。
>
		" 例子:
		if !exists('g:neocomplcache_vim_completefuncs')
		  let g:neocomplcache_vim_completefuncs = {}
		endif
		let g:neocomplcache_vim_completefuncs.Ref = 'ref#complete'
<
		
		默认值是 {}.
                
g:neocomplcache_plugin_disable				*g:neocomplcache_plugin_disable*
		这个字典列表控制是否禁用一个插件。
		插件名为键值，其值为 1 时禁用该插件。
		
		默认值是 {}.

g:neocomplcache_plugin_completion_length		*g:neocomplcache_plugin_completion_length*
		它是一个字典用于控制每个插件的补全字符的长度。举例
		你可以延长 heavy 插件补全的字符长度。
		
		默认值是 {}.

g:neocomplcache_plugin_rank				*g:neocomplcache_plugin_rank*
		它是一个字典用于控制每个插件的
		优先补全。
		
		默认值为各个插件自行设定。

------------------------------------------------------------------------------
KEY MAPPINGS 						*neocomplcache-key-mappings*

<Plug>(neocomplcache_snippets_expand)			*<Plug>(neocomplcache_snippets_expand)*
		展开 snippet (成多行). 当没有 snippet 时,
		跳到下一个 placeholder.  The snippet which unfolded is
		easy to become display by the high rank so that a rank
		rises.

<Plug>(neocomplcache_snippets_jump)			*<Plug>(neocomplcache_snippets_jump)*
		跳到下一个 place holder. 不展开 snippet.  当你
		不想展开一个 snippet 名时, 用这个
		键映射.

neocomplcache#manual_filename_complete()		*neocomplcache#manual_filename_complete()*
		使用这个函数于 inoremap <expr>. 此键映射调用
		the file name completion of neocomplcache.  When you
		rearrange the file name completion of the Vim standard, you
		use it.
>
		inoremap <expr><C-x><C-f>  neocomplcache#manual_filename_complete()
<
neocomplcache#manual_omni_complete()			*neocomplcache#manual_omni_complete()*
		使用这个函数于 inoremap <expr>.  此键映射调用
		neocomplcache的 omni 补全.  当重新整理了
		Vim 默认的 omni 补全时, 你就用它.
>
		inoremap <expr><C-j>  neocomplcache#manual_filename_complete()
<
neocomplcache#manual_keyword_complete()			*neocomplcache#manual_keyword_complete()*
		使用这个函数于inoremap <expr>.  此键映射调用
		neocomplcache的关键词补全世界.  当重新整理了
		Vim 默认的关键词补全时, 你就用它.
>
		inoremap <expr><C-n>  pumvisible() ? "\<C-n>" : neocomplcache#manual_keyword_complete()

neocomplcache#close_popup()				*neocomplcache#close_popup()*
		完成 neocomplcache 补全并关闭菜单.
>
		inoremap <expr><C-y>  neocomplcache#close_popup()
<
neocomplcache#cancel_popup()				*neocomplcache#cancel_popup()*
		取消 neocomplcache 的补全菜单.
>
		inoremap <expr><C-e>  neocomplcache#cancel_popup()
<
neocomplcache#smart_close_popup()			*neocomplcache#smart_close_popup()*
		完成 neocomplcache 补全并关闭菜单.
		不像|neocomplcache#close_popup()|, 此函数需通过
		|g:neocomplcache_enable_auto_select|选项设定关闭菜单的方法.

neocomplcache#undo_completion()				*neocomplcache#undo_completion()*
		使用这个函数于 inoremap <expr>.取消已完成的 
		补全.  因为 Vim 没有取消补全的机制,
		当发生改变时会非常方便的.
>
		inoremap <expr><C-g>     neocomplcache#undo_completion()
<
neocomplcache#complete_common_string()			*neocomplcache#complete_common_string()*
		使用这个函数于 inoremap <expr>. 补全普通字符串。
		候选项目里补全项目是长的字符串时
>
		inoremap <expr><C-l>     neocomplcache#complete_common_string()
		
<
neocomplcache#sources#snippets_complete#expandable()	*neocomplcache#sources#snippets_complete#expandable()*
		使用这个函数于inoremap <expr>. 它检验光标下 
		文本是否能展开 snippets 或 缓冲区中是否存在 placeholder 
		这个函数在保存键映射时很有用。
		返回值为 
		0 : 没有找到
		1 : 光标下文本是能展开 snippets 
		2 : 当前缓冲区存在 placeholder 
>
		imap <expr><C-l>    neocomplcache#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : "\<C-n>"
<
==============================================================================
EXAMPLES						*neocomplcache-examples*
>
	" 停用 AutoComplPop.
	let g:acp_enableAtStartup = 0
	" 启用 neocomplcache.
	let g:neocomplcache_enable_at_startup = 1
	" 启用 smartcase.
	let g:neocomplcache_enable_smart_case = 1
	" 启用大写字母补全.
	let g:neocomplcache_enable_camel_case_completion = 1
	" 启用下划线补全.
	let g:neocomplcache_enable_underbar_completion = 1
	" 设定最小语法关键词长度.
	let g:neocomplcache_min_syntax_length = 3
	let g:neocomplcache_lock_buffer_name_pattern = '\*ku\*'
	
	" 定义字典.
	let g:neocomplcache_dictionary_filetype_lists = {
	    \ 'default' : '',
	    \ 'vimshell' : $HOME.'/.vimshell_hist',
	    \ 'scheme' : $HOME.'/.gosh_completions'
	        \ }
		
	" 定义关键词.
	if !exists('g:neocomplcache_keyword_patterns')
	    let g:neocomplcache_keyword_patterns = {}
	endif
	let g:neocomplcache_keyword_patterns['default'] = '\h\w*'
	
	" 插件键映射.
	imap <C-k>     <Plug>(neocomplcache_snippets_expand)
	smap <C-k>     <Plug>(neocomplcache_snippets_expand)
	inoremap <expr><C-g>     neocomplcache#undo_completion()
	inoremap <expr><C-l>     neocomplcache#complete_common_string()
	
	" 类似于SuperTab用法 .
	"imap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? "\<Plug>(neocomplcache_snippets_expand)" : pumvisible() ? "\<C-n>" : "\<TAB>"
	
	" 推荐的键映射.
	" <CR>: close popup and save indent.
	inoremap <expr><CR>  neocomplcache#smart_close_popup() . "\<CR>"
	" <TAB>: completion.
	inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
	" <C-h>, <BS>: close popup and delete backword char.
	inoremap <expr><C-h> neocomplcache#smart_close_popup()."\<C-h>"
	inoremap <expr><BS> neocomplcache#smart_close_popup()."\<C-h>"
	inoremap <expr><C-y>  neocomplcache#close_popup()
	inoremap <expr><C-e>  neocomplcache#cancel_popup()
	
	" 类似于AutoComplPop用法 .
	"let g:neocomplcache_enable_auto_select = 1
	
	" 类似于 Shell 用法(不推荐).
	"set completeopt+=longest
	"let g:neocomplcache_enable_auto_select = 1
	"let g:neocomplcache_disable_auto_complete = 1
	"inoremap <expr><TAB>  pumvisible() ? "\<Down>" : "\<TAB>"
	"inoremap <expr><CR>  neocomplcache#smart_close_popup() . "\<CR>"
	
	" 启用 omni 补全.
	autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
	autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
	autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
	autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
	autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
	
	" 启用 heavy omni 补全.
	if !exists('g:neocomplcache_omni_patterns')
		let g:neocomplcache_omni_patterns = {}
	endif
	let g:neocomplcache_omni_patterns.ruby = '[^. *\t]\.\w*\|\h\w*::'
	"autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete
	let g:neocomplcache_omni_patterns.php = '[^. \t]->\h\w*\|\h\w*::'
<
==============================================================================
PLUGINS							*neocomplcache-plugins*

Neocomplcache 将自动控制读取保存在
autoload/neocomplcache/sources目录的插件。

buffer_complete.vim					*buffer_complete*
		这个插件从缓存和字典里收集关键词，并用于自动补全。
		因为该插件为neocomplcache提供基本功能,
		删除该插件时，neocomplcache 将不能正常工作。

snippets_complete.vim					*snippets_complete*
		这个插件为自动实例分析代码段(snippets)文件。
		该插件提供类似于 snipMate.vim 和 snippetsEmu.vim 功能。
		你不用学习就可以用 neocomplcache 功能搜索代码段(snippets)。

tags_complete.vim					*tags_complete*
		该插件通过定义在'tags'里标签分析标签文件完成补全。
		如果你不执行|:NeoComplCacheCachingTags|命令，
		neocomplcache不缓存巨大的标签文件，
		因为标签补全读取大的标签文件时太慢。
		现在你应该使用更方便的包含实补全。

syntax_complete.vim					*syntax_complete*
		该插件提供分析语法文件功能，
		就像默认autoload/syntaxcomplete.vim一样，
		识别后加入到补全的候选项目。 
		该插件能比默认的autoload/syntaxcomplete.vim
		识别出更多的候选项目。

include_complete.vim					*include_complete*
		该插件用于添加文件,此文件保存了   
		缓冲区中可用补全菜单的补全项目
		因为不用预读取标签文件和字典文件，它用起来很方便。
		但必须正确设定'path' 和 'include','includeexpr'。
		 
vim_complete.vim					*vim_complete*
		该插件分析上下文，并开始 VimScript 的Omni completion功能。
		如果不是编辑VimScript文件时，该插件会停用。
		我创建它是因为 neocomplcache不能调用|i_CTRL-X_CTRL-V|。
		局部变量、脚本变量、函数和命令分析现在能实现了。
	    
dictionary_complete.vim					*dictionary_complete*
		该插件从 'dictionary' 或
		|g:neocomplcache_dictionary_filetype_lists|里添加候选项目。

filename_complete.vim					*filename_complete*
		该插件收集文件名候选项目。
		当你输入长文件名时它非常有用。

omni_complete.vim					*omni_complete*
		当光标下文字匹配|g:neocomplcache_omni_patterns|，该插件自动调用 'omnifunc'。
		如果|g:neocomplcache_omni_function_list|定义了参数,
		neocomplcache 将优先使用它。

completefunc_complete.vim				*completefunc_complete*
		该插件从任何 'completefunc' 收集候选项目。
		但是它的功能还不完整。只有
		neocomplcache#sources#completefunc_complete#call_completefunc(funcname)
		是可用的。 此函数手动调用任何 'completefunc'。

abbrev_complete.vim					*abbrev_complete*
		该插件从缩写里添加候选项目。

------------------------------------------------------------------------------
USER PLUGINS 						*neocomplcache-user-plugins*

这节将介绍 neocomplcache 的非默认插件。

ghc_complete.vim					*neocomplcache-plugins-ghc_complete*
		http://github.com/ujihisa/ghc_complete
		This plugin's author is eagletmt, and maintainer is ujihisa.
		It completes source file written Haskell.
		It needs ghc-mod <http://www.mew.org/~kazu/proj/ghc-mod/>.

==============================================================================
TODO							*neocomplcache-todo*

==============================================================================
BUGS							*neocomplcache-bugs*

==============================================================================
CREATE PLUGIN						*neocomplcache-create-plugin*

本节, 我将介绍制造插件的方法。
neocomplcache的能力可通过创建插件扩展。

==============================================================================
CHANGELOG						*neocomplcache-changelog*

2010-12-10
- Released Ver.5.3.

2010-12-05
- Supported Konoha language.

2010-11-16
- Implemented ignore source.

2010-11-14
- Improved vim keyword pattern.

2010-11-10
- Fixed :Neco.
- Independent +reltime.

2010-11-07
- Improved modeline.

2010-11-04
- Improved snippets expand.
- Improved snippets search.

2010-11-02
- Improved clojure and lisp support.

2010-11-01
- Improved Perl6 support.

2010-10-25
- Fixed g:neocomplcache_plugin_rank error.

2010-10-24
- Fixed :NeoComplCacheEnableCaching error.
- Fixed examples.

2010-10-23
- Implemented colorscheme completion.
- Improved snippets include syntax.

2010-10-21
- Improved snippet_complete manual.

2010-10-19
- Fixed vim_complete error.
- Improved error check.

2010-10-15
- Improved vim keyword pattern.
- Improved sid functions support.

2010-10-14
- Fixed buffer caching bug.
- Added zimbu support.

2010-10-07
- Improved python snippets.

2010-10-06
- Improved g:neocomplcache_omni_patterns description.

2010-10-05
- Improved haskell keyword pattern.

2010-10-02
- Ver.5.3 development started.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 5.2:
2010-09-30
- Deleted member filter.
- Fixed delimiter.
- Supported php namespace.
- Improved c++ completion.
- Improved php delimiter.
- Added :Neco animation.

2010-09-29
- Improved filename_complete.
- Added g:neocomplcache_enable_auto_delimiter option.

2010-09-28
- Fixed filename_complete.

2010-09-27
- Improved filename complete.
- Fixed java snippet warning.

2010-09-26
- Fixed xhtml snippet error.
- Improved delimiter.

2010-09-24
- Added ghc_complete description.

2010-09-23
- Fixed vim_complete kind bug.
- Improved d snippet.
- Detect duplicated snippet name.

2010-09-21
- Added NeoComplCacheCachingInclude description.
- Improved include cache.

2010-09-18
- Fixed filename completion error.

2010-09-16
- Fixed caching bug.
- Added g:neocomplcache_force_caching_buffer_name_pattern option.

2010-09-15
- Implemented escaped ` in snippets_complete.
- Improved snippet syntax.

2010-09-10
- Improved caching algorithm.
- Added g:neocomplcache_disable_auto_select_buffer_name_pattern option.

2010-09-08
- Improved cache timing.
- Revised documentation.
- Fixed for Vim 7.0.
- Added install description.

2010-09-06
- Improved for echodoc.

2010-09-04
- Improved omni_complete default pattern.

2010-09-03
- Fixed snippets analyze.
- Fixed plugin manual.

2010-09-02
- Deleted g:neocomplcache_enable_display_parameter option.
- Added g:neocomplcache_enable_caching_message option.
- Supported Vim7.3 in vim_complete.

2010-09-01
- Fixed :Neco.
- Improved caching message.
- Fixed filtering.

2010-08-31
- Improved :Neco.
- Improved echo.

2010-08-30
- Improved ctags arguments for mac.
- Fixed mac check.

2010-08-29
- Fixed caching timing.
- Added objj support.

2010-08-25
- Improved keyword patterns.
- Improved filename pattern.
- Fixed multibyte check.

2010-08-24
- Improved g:neocomplcache_ctags_arguments_list.
- Fixed include_complete bugs.

2010-08-23
- Improved print caching.

2010-08-22
- Improved get_cur_text().
- Implemented neocomplcache#do_auto_complete().
- Improved print caching.

2010-08-20
- Fixed is_enabled error.
- Implemented member completion in buffer_complete.
- Added shell like behavior settings.

2010-08-19
- Fixed get_cur_text() bug.
- Fixed examples.
- Improved for echodoc.
- Fixed get_cur_text() in snippets_complete.

2010-08-17
- Fixed abbrev_complete redir bug.
- Fixed var_dictionary complete in vim_complete.
- Improved get_cur_text().
- Fixed keyword pattern.
- Fixed echodoc in include_complete.

2010-08-16
- Fixed abbrev_complete.
- Supported lua.

2010-08-15
- Improved plugin error catch.

2010-08-14
- Improved error catch.

2010-08-13
- Improved caching.
- Fixed nasm error.

2010-08-12
- Fixed filter bug.

2010-08-11
- Refactoringed :Neco command.

2010-08-09
- Fixed include_complete error in echodoc.
- Fixed context filetype bug in filetype plugin.

2010-08-08
- Improved lock.
- Supported echodoc in vim_complete.

2010-08-07
- Implemented neocomplcache enabled check.
- Supported echodoc in vim_complete.
- Supported echodoc in snippets_complete.

2010-08-05
- Improved ctags arguments.
- Improved gas syntax.

2010-08-04
- Improved eskk support.
- Improved vim_complete check.
- Fixed vim_complete cur_keyword_str bug.

2010-08-03
- Fixed filename_complete error.

2010-08-02
- Ver.5.2 development started.
- Fixed filename_complete.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 5.1:
2010-08-02
- Released neocomplcache Ver.5.1
- Fixed css snippet.

2010-07-31
- Supported coffee script.
- Improved neocomplcache#filetype_complete().
- Skip filename completion when too many candidates.
- Added :NeoComplCacheCachingDictionary discription.

2010-07-30
- Fixed documentation.

2010-07-29
- Added omni completion examples.
- Supported inline assembly language.
- Fixed vim_complete commands.dict.
- Added neocomplcache#set_completion_length().

2010-07-28
- Fixed eskk check.
- Improved vim keyword pattern.
- Improved examples.
- Fixed vim_complete error.

2010-07-27
- Fixed autocompletion freeze.
- Fixed omni completion bug.
- Fixed :NeoComplCacheToggle.
- Improved g:neocomplcache_plugin_disable behavior.
- Improved eskk check.

2010-07-26
- Fixed snippets expand error.
- Fixed error when local variable completion.
- Improved haskell keyword pattern.

2010-07-25
- Improved termtter keywords.
- Improved filetype completion.
- Implemented set rank helper.
- Changed vim_complete marker.
- Implemented syntax attr helper.
- Improved startup.
- Improved member filter.
- Implemented filetype plugin.
- Fixed neocomplcache#system().
- Improved local variable analysis.
- Implemented expand completion.
- Refactoringed vim_complete.
- Improved vim_complete.
- Changed neocomplcache#set_dictionary_helper().
- Fixed example.
- Allow blank line in snippet.
- Fixed snippet parse.
- Fixed ftplugin bug.
- Improved context filetype.

2010-07-23
- Fixed environments parse bug.
- Improved include check.

2010-07-22
- Improved detect completefunc.
- Improved interactive termtter pattern.
- Improved caching.
- Fixed analyzing function.

2010-07-21
- Improved autoload plugins.
- Improved g:neocomplcache_omni_patterns description.

2010-07-19
- Improved truncate filename.
- Fixed quick match bug.
- Improved include_complete.
- Supported union.

2010-07-18
- Improved multibyte trunk.
- Improved neocomplcache#snippets_complete#expandable().
- Disabled Ruby omni completion.

2010-07-17
- Fixed neocomplcache#match_word() bug.
- Optimized match.
- Improved print error.

2010-07-16
- Improved neocomplcache#get_auto_completion_length().
- Fixed documentation.
- Improved quickmatch selection.
- Improved check wildcard.
- Fixed quickmatch selection.
- Improved vimshell pattern.
- Improved :NeoComplCacheAutoCompletionLength behavior.
- Improved buffer caching.

2010-07-15
- Fixed error when complete directory.
- Added g:neocomplcache_quick_match_table.
- Added neocomplcache#smart_close_popup().
- Improved tilde substitution.
- Improved neocomplcache#close_popup().

2010-07-13
- Supported gdb keyword.

2010-07-12
- Improved eskk and vimproc check.

2010-07-11
- Supported GetLatestVimScripts.

2010-07-10
- Deleted spell_complete.
- Implemented dictionary plugins.
- Deleted obsolute functions.

2010-07-09
- Improved eskk check.
- Improved javascript support.
- Improved css keyword pattern.
- Fixed quickmatch error.
- Fixed neocomplcache#complete_common_string() bug.

2010-07-08
- Fixed get filetype timing in snippets_complete.

2010-07-07
- Fixed eskk omni completion bug.

2010-07-06
- Fixed for eskk.

2010-07-04
- Disabled keyword_complete when eskk is enabled.

2010-07-01
- Fixed context filetype bug.
- Added tex in text mode filetypes.
- Improved text mode.

2010-06-28
- Ver.5.1 development started.
- Improved integrated completion.
- Improved snippet alias pattern.
- Implemented text mode.
- Added g:neocomplcache_text_mode_filetypes option.
- Added "nothing" in text mode filetype.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 5.0:
2010-06-24
- Improved eruby support.
- Improved ruby keyword.

2010-06-23
- Improved keyword pattern.
- Renamed g:neocomplcache_disable_plugin_list as g:neocomplcache_plugin_disable.
- Renamed g:neocomplcache_plugin_completion_length_list as g:neocomplcache_plugin_completion_length.
- Refactoringed keyword_complete.
- Added g:neocomplcache_plugin_rank option.
- Introduced thinca's script.
- Fixed context filetype.
- Fixed rank bug.
- Fixed command line window error.

2010-06-22
- Added eskk omni completion support.
- Improved filter.
- Improved eskk support.
- Fixed presentation file.

2010-06-20
- Improved keyword patterns.

2010-06-19
- Optimized frequencies.
- Improved keyword pattern.
- Improved cur_text.
- Changed g:neocomplcache_omni_function_list as g:neocomplcache_omni_functions.
- Added g:neocomplcache_vim_completefuncs option.
- Implemented customlist completion in vim_complete.

2010-06-18
- Improved clojure support.
- Fixed dup problem in snippets_complete.
- Improved abbr.
- Improved filename_complete.

2010-06-17
- Fixed manual completion freeze bug.
- Refactoringed neocomplcache#start_manual_complete().
- Improved erlang keyword pattern.
- Improved d and java keyword patterns.
- Added g:neocomplcache_delimiter_patterns option.
- Implemented delimiter completion.
- Improved abbr.

2010-06-15
- Fixed examples.
- Optimized memory when loaded cache.
- Fixed g:neocomplcache_enable_cursor_hold_i bug.
- Improved garbage collect and calc rank.
- Improved caching timing.
- Deleted neocomplcache#caching_percent().
- Optimized caching.

2010-06-12
- Improved context filetype.
- Improved syntax_complete.
- Fixed eruby and ruby pattern.
- Added neocomplcache#cancel_popup().

2010-06-11
- Improved caching message.
- Improved expand snippet.

2010-06-10
- Optimized sort.
- Deleted neocomplcache#cancel_popup().
- Reimplemented neocomplcache#close_popup().
- Improved snippets expand.
- Fixed sort bug.
- Fixed context filetype bug.

2010-06-08
- Added objc omni completion support.
- Improved context filetype.
- Improved caching message.
- Improved keyword patterns.
- Improved vim_complete.
- Added pasm and pir support.
- Fixed nested snippet bug.
- Fixed expand a snippet contained blank line bug.
- Improved help.

2010-06-07
- Fixed delete cache bug.
- Refixed help caching bug.
- dictionary_complete use dictionary option.
- Improved masm and nasm keyword pattern.
- Supported H8-300 keyword pattern.
- Added g:neocomplcache_filetype_include_lists option.
- Added g:neocomplcache_omni_function_list option.

2010-06-06
- Optimized cache.
- Fixed vim_complete freeze.

2010-06-05
- Improved cache timing.

2010-06-04
- Fixed abbrev_complete check.
- Fixed icase bug.
- Improved icase.
- Fixed obsolute settings.
- Changed g:neocomplcache_caching_limit_file_size default value.
- Optimized completion.
- Refixed help file caching bug.
- Allow snipMate like snippet.

2010-06-03
- Changed g:neocomplcache_enable_cursor_hold_i_time into g:neocomplcache_cursor_hold_i_time.
- Improved dummy move.
- Improved help.
- Fixed help file caching bug.
- Fixed filename_complete rank.

2010-06-02
- Fixed save cache error.
- Deleted g:neocomplcache_enable_randomize option.
- Deleted g:neocomplcache_enable_alphabetical_order option.
- Deleted g:neocomplcache_caching_percent_in_statusline option.
- Changed g:neocomplcache_enable_quick_match default value.
- Fixed abbrev_complete bug.

2010-06-01
- Improved abbr check.
- Added abbrev_complete plugin.
- Fixed disable AutoComplPop.

2010-05-31
- Ver.5 development started.
- Fixed include_complete error.
- Changed variables name dramatically.
- Fixed multibyte problems.
- Deleted g:neocomplcache_cache_line_count variable.
- Changed g:neocomplcache_alphabetical_order into g:neocomplcache_enable_alphabetical_order.
- Changed g:neocomplcache_plugin_completion_length into g:neocomplcache_plugin_completion_length.
- Changed g:neocomplcache_caching_disable_pattern into g:neocomplcache_disable_caching_buffer_name_pattern.
- Changed g:neocomplcache_lock_buffer_name_pattern into g:neocomplcache_lock_buffer_name_pattern.
- Changed NeoComplCacheCachingDisable into NeoComplCacheDisableCaching.
- Changed NeoComplCacheCachingEnable into NeoComplCacheEnableCaching.
- Check obsolute options.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 4.30:
2010-05-31
- Marked as ver.4.30.

2010-05-30
- Improved help file.
- Improved dummy move.

2010-05-29
* Detect text was changed.
- Fixed error when NeoComplCacheDisable.
- Fixed completion length bugs.
- Refactoringed.
- Added AutoComplPop like behavior settings.
- Improved vim_complete.
- Implemented ambiguous command completion.
- Improved dummy move.

2010-05-27
- Caching readonly buffer.
- Fixed menu bug in buffer_complete.
- Improved recaching behavior.
- Improved caching.

2010-05-26
- Improved buffer cache timing.
- Detect AutoComplPop.
- Changed check buflisted() into bufloaded().

2010-05-25
- Revised example settings.

2010-05-23
* Improved filename_complete.
- Implemented ~Username/ completion in filename_complete.
- Use 'path' in filename_complete.
- cd source path when searching include files.
- Improved directory completion in vim_complete.

2010-05-20
- Disabled php omni completion.
- Deleted keyword cache in omni_complete.
- Improved caching timing in buffer_complete.

2010-05-18
- Fixed prototype in vim_complete.
- Fixed custom and customlist error in vim_complete.

2010-05-16
- Improved ocaml keyword pattern.
- Improved wildcard check.
- '#' as wildcard in vim_complete.
- Improved function display in vim_complete.
- Added ml keyword pattern.
- Fixed quickmatch bugs.
- Deleted obsolute functions.
- Deleted obsolute internal variable.

2010-05-15
* Improved vim_complete.

2010-05-14
* Improved disable bell.

2010-05-13
* Fixed quickmatch keyword position bug.
* Fixed html next keyword pattern.
* Revised completion.
* Improved quickmatch.

2010-05-11
* Fixed vim_complete bugs.
* Improved vim_complete analyse.

2010-05-09
* neocomplcache disables bell.
* Improved filename pattern.

2010-05-05
* Disabled C/C++ Omni patterns.
* Improved vimproc#system().
* Improved g:neocomplcache_max_keyword_width.
* Detect conflicted plugin.

2010-05-02
* Implemented dictionary completion in vim_complete.

2010-05-01
* Deleted mapping check.
* Improved vim_complete analyse.

2010-04-30
* If <CR> is mapped, g:neocomplcache_enable_auto_select option does not work to avoid a side effect.
* Improved neocomplcache#close_popup().

2010-04-29
* Use b:changedtick.
* Ignore command line window caching.
* Added g:neocomplcache_enable_auto_select option.

2010-04-26
* Improved vim_complete. Recognize context.

2010-04-25
* Enable spell_complete in manual_complete.
* Fixed quickmatch behavior.
* Improved user commands analsze in vim_complete.

2010-04-20
* Fixed vim completion bug.
* Implemented lazy caching in vim_complete.
* Enable cache in "[Command line]" buffer.

2010-04-17
* Improved print prototype behavior when g:neocomplcache_cursor_hold_i_time.
* Improved redraw.
* Improved for skk.vim.

2010-04-16
* Improved print prototype in vim_complete.

2010-04-15
* Improved vim_complete.
- Supported '<,'>command...
* Fixed g:neocomplcache_enable_ignore_case bug.
- Improved filtering.
* Fixed neocomplcache#complete_common_string() bug.
* Implemented CursorHoldI completion.
* Added g:neocomplcache_enable_cursor_hold_i and g:neocomplcache_cursor_hold_i_time options.
* Deleted g:NeoComplCache_EnableSkipCompletion and g:NeoComplCache_SkipCompletionTime options.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 4.20:
2010-04-15
    * Changed default value of g:neocomplcache_enable_ignore_case.

2010-04-13
    * Improved for skk.vim.
    * Use neocomplcache#escape_match().

2010-04-11
    * Improved command completion text.
    * Improved command prototype dictionary in vim_complete.
    * Completed prototype dictionary.
    * Improved command name search.

2010-04-10
    * Improved command completion in vim_complete.
    * Skip head digits in vim_complete.
    * Highlight color when print prototype.

2010-04-09
    * Improved _ snippets.

2010-04-06
    * Improved mappings dictionary.
    * Lazy caching environment variables.
    * Added variables dictionary.

2010-04-01
    * Fixed quickmatch bug.

2010-03-17
    * Fixed quickmatch bug.
    * Improved vim_complete performance.

2010-03-16
    * Deleted obsolute variables.
    * Improved manual complete.
    * Improved keyword_filter.
    * Improved vim_complete.

2010-03-11
    * Fixed quickmatch bug.

2010-03-06
    * Improved frequency garbage collect.
    * Improved buffer caching.

2010-03-05
    * Improved caching print.
    * Incleased omni completion rank.
    * Added snippets_complete help in Japanese.

2010-03-02
    * Caching disable when bufname is '[Command line]'

2010-02-19
    * Fixed snippets expand bug.
    * Fixed interactive filetype.
    * Fixed manual completion bug.

2010-02-18
    * Fixed filename pattern.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 4.00-:
   4.10:
    - Fixed interactive Gauche support.
    - Added omni_complete and vim_complete rank.
    - Implemented fuzzy filter(experimental).
    - Improved lingr-vim support.
    - Implemented spell_complete.vim(experimental)
    - Improved skk.vim support.
    - Improved lisp keyword pattern.
    - Added clojure support.
    
   4.09:
    - Improved syntax detect in snippets_complete.
    - Improved NeoComplCachePrintSnippets command.
    - Fixed snippet newline expand in snippets_complete.
    - Improved syntax highlight in snippets_complete.
    - Optimized filename_complete.
    - Added snippet files(Thanks mfumi!).
    - Fixed multibyte input bug.
    - Added interactive termtter keyword.
    - Added keyword pattern of batch file.
    - Improved filtering word.
    - Supported Visual Basic.
    - Supported lingr-vim.
    - Update lines number in buffer_complete.
    - Supported omnifunc name pattern in omni_complete.
    - Fixed complete length bug in omni_complete.
    - Fixed wildcard bug.
    - Fixed indent.
    - Supported interactive ocaml.
    
   4.08:
    - Improved keywords in vim_complete.
    - Deleted g:NeoComplCache_NonBufferFileTypeDetect option.
    - Improved composition filetype keyword support.
    - Fixed neocomplcache#system.
    - Added g:neocomplcache_ctags_program option.
    - Fixed ctags execution bug.
    - Improved quickmatch behavior.
    - Fixed complete length bug in omni_complete.
    - Fixed wildcard freeze in filename_complete.
    
   4.07:
    - Improved filaname pattern.
    - Deleted '...' pattern.
    - Fixed functions_prototype bug in vim_complete.
    - Added same filetype lists for vimshell iexe.
    - Added syntax pattern for vimshell iexe.
    - Fixed filename completion bug.
    - Added vimshell omni completion support.
    - Disabled filename_complete in vimshell.
    - Implemented dictionary_complete.vim.
    - Optimized buffer_complete.
    - Improved tex pattern.
    - Improved same filetype.
    - Improved filetype completion.

   4.06:
    - Improved command completion in snippets_complete.
    - Improved skip directory in filename_complete.
    - Improved head match.
    - Added completefunc_complete.
    - Fixed neocomplcache#get_cur_text() bug.
    - Fixed unpack dictionary bug in tags_complete.
    
   4.05:
    - Improved snippet alias.
    - Improved analyzing extra args in vim_complete.
    - Fixed pattern match error.
    - Fixed analyzing bug in vim_complete.
    - Improved check match filter.
    - Don't fnamemodify in omni_complete.
    - Improved trunk filename in filename_complete.
    - Fixed complete common string bug.
    
   4.04:
    - Implemented common string completion.
    - Added css snippet file.
    - Added quickmatch key.
    - Implemented hash.
    - Use vimproc#system() if available.
    - Supported vimshell interpreters.
    - Fixed manual filename completion bug.
    - Use md5.vim if available.
    - Cache previous results.
    - Skip listed files in include_complete.
    - Implemented fast mode when last completion was skipped.
    - Deleted C/C++ omni completion support.
    - Improved caching tag.
    
   4.03:
    - Don't use abs() for Vim7.
    - Changed display interface in snippets_complete.
    - Implemented no options in vim_complete.
    - Improved compatiblity with snipMate.
    - Fixed typo in neocomplcache.jax.
    
   4.02:
    - Added Python snippet.
    - Added g:neocomplcache_tags_filter_patterns option.
    - Use g:neocomplcache_tags_filter_patterns in omni_complete.
    - Supported nested include file in C/C++ filetype in include_complete.
    - Improved print prototype in vim_complete.
    - Fixed member fileter error.
    - Fixed fatal include_complete error.
    - Fixed haskell and ocaml patterns.
    
   4.01:
    - Added filename pattern.
    - Fixed in TeX behavior in filename_complete.
    - Improved garbage collect.
    - Improved next keyword completion.
    - Supported next keyword completion in filename_complete.
    - Supported mark down filetype.
    - Fixed error when load file in include_complete.
    - Deleted regacy option.
    - Improved complete option in vim_complete.
    - Ignore space in snippets_complete.
    - Added markdown snippet.
    - Improved randomize.
    - Changed g:neocomplcache_CalcRankRandomize option as g:neocomplcache_enable_randomize.
    - Fixed save cache error.
    
   4.00:
    - Fixed manual completion error.
    - Deleted g:NeoComplCache_PreviousKeywordCompletion. It's default.
    - Deleted calc_rank().
    - Improved caching print.
    - Improved calc frequency.
    - Optimized speed.
    - Deleted dup in include_complete.
    - Use caching helper in plugins.
    - Improved option in vim_complete.
    - Delete dup check in buffer_complete.
    - Improved garbage collect in buffer_complete.
    - Deleted prev_rank.
    - Deleted g:NeoComplCache_EnableInfo option.
    - Fixed fatal buffer_complete bug.
    - Improved buffer caching.
    - Added NeoComplCacheCachingDictionary command.
    - Implemented auto cache in tags_complete.
    - Fixed tags_complete caching error.
    - Don't save empty tags file.
    - Fixed output keyword error.
    - Fixed finalize error.
    - Use /dev/stdout in Linux and Mac in include_complete.
    - Deleted caching current buffer in include_complete.
    - Improved tex keyword pattern.
    - Improved analyse in syntax_complete.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 3.00-:
   3.22:
    - Fixed manual completion error.
    - Fixed set completeopt bug.
    - Fixed manual completion error in omni_complete.
    - Fixed caching error in tags_complete(Thanks tosik).
    - Caching current buffer in include_complete.
    - Use include_complete's cache in omni_complete.
    - Fixed filetype bug in include_complete.
    - Don't cache huge file in include_complete.
    - Fixed snippet expand bug in snippets_complete.
    - Implemented keyword cache in omni_complete.
    - Implemented skip directory in filename_complete.
    
   3.21:
    - Catch error in omni_complete.
    - Deleted Filename() and g:snips_author in snippets_complete.
    - Catch eval error in snippets_complete.
    - Formatted help files.
    - Fixed set path pattern in Python.
    - Improved load complfuncs.
    - Improved wildcard.
    - Supported wildcard in vim_complete and omni_complete.
    - Improved skip completion.
    - Deleted g:NeoComplCache_SkipInputTime option.

   3.20:
    - Improved html and vim keyword pattern.
    - Improved buffer caching.
    - Improved manual completion.
    - Implemented Filename() and g:snips_author for snipMate.
    - Fixed fatal manual completion bug.
    - Don't expand environment variable in filename_complete.
    - Implemented environment variable completion in vim_complete.

   3.19:
    - Added C/C++ support in omni_complete.
    - Fixed PHP pattern bug in omni_complete.
    - Fixed quickmatch bug in omni_complete.
    - Don't complete within comment in vim_complete.
    - Improved global caching in vim_complete.
    - Improved omni patterns in omni_complete.
    - Deleted caching when BufWritePost in include_complete.
    - Implemented buffer local autocomplete lock.

   3.18:
    - Improved backslash escape in filename_complete.
    - Deleted \v pattern.
    - Fixed error when execute NeoComplCacheDisable.
    - Fixed keyword bug in vim_complete.
    - Implemented intellisense like prototype echo in vim_complete.
    - Added g:neocomplcache_enable_display_parameter option.
    - Implemented the static model recognition in vim_complete.
    - Fixed disable expand when buftype is 'nofile' bug in snippets_complete.
    - Implemented <Plug>(neocomplcache_snippets_jump) in snippets_complete.
    - Implemented hard tab expand in vim_complete.
    - Restore cursor position in omni_complete.

   3.17:
    - Reinforced vim_complete.vim.
    - Improved shortcut filename completion in filename_complete.
    - Implemented pseudo animation.
    - Supported backslash in vim_complete.
    - Supported manual plugin complete.
    - Improved caching speed when FileType in include_complete.
    - Fixed freeze bug in filename_complete.
   3.16:
    - Fixed executable bug in filename_complete.
    - Fixed error; when open the file of the filetype that g:neocomplcache_keyword_patterns does not have in include_complete.
    - Improved get keyword pattern.
    - Supported string and dictionary candidates in omni_complete.
    - Don't set dup when match with next keyword.
    - Implemented vim_complete(testing).
    - Syntax_complete disabled in vim.
    - Fixed quickmatch list bug.
    - Fixed expand snippets bug.

   3.15:
    - Fixed ruby omni_complete bug.
    - Fixed prefix bug.
    - Allow keyword trigger in snippets_complete.
    - Fixed NeoComplCacheEditRuntimeSnippets bug.
    - Refactoringed set pattern.
    - Added g:neocomplcache_quick_match_patterns option.
    - Added same filetype.
    - Revised English help.

   3.14: *Fatal: Fixed fatal buffer and dictionary cache bug. *
    - Fixed disable auto completion bug if bugtype contains 'nofile'.
    - Ignore no suffixes file in include_complete.
    - Fixed snippet merge bug in snippets_complete.
    - Fixed break buffer and dictionary cache bug.

   3.13:
    - Open popup menu when modified.
    - Improved buffer caching timing.
    - Skip completion if too many candidates.
    - Fixed quickmatch dup bug.
    - Fixed auto completion bug in filename_complete.
    - Fixed executable bug in filename_complete.

   3.12:
    - Improved ctags arguments patterns.
    - Allow dup and improved menu in omni_complete.
    - Recognized snippets directory of snipMate automatically.
    - Fixed eval snippet bug.
    - Fixed tags caching bug.
    - Deleted C omni completion support.
    - Fixed menu in buffer_complete.
    - Auto complete when CursorMovedI not CursorHoldI.
    - Reimplemented g:NeoComplCache_SkipInputTime option.
    - Fixed dup check bug in syntax_complete.
    
   3.11:
    - Filtering same word.
    - Implemented member filter.
    - Changed cache file syntax.
    - Print error when cache file is wrong.
    - Improved keyword patterns.
    - Reimplemented quickmatch.
    - Disabled '-' wildcard.
    - Allow dup in include_complete and tags_complete.
    - Improved filename completion.
    - implemented filename wildcard.

   3.10:
    - Optimized keyword_complete.
    - Integrated complfuncs.
    - Complfunc supported g:neocomplcache_plugin_completion_length option.
    - Improved omni completion pattern.
    - Improved html's keyword pattern.
    - Fixed manual completion error.
    - Improved remove next keyword.
    - Implemented complfunc rank.
    - Save error log when analyzing tags.

   3.09:
    - Improved wildcard behavior.
    - Disabled partial match.
    - Added g:neocomplcache_plugin_disable option.
    - Fixed wildcard bug.
    - Implemented fast search.
    - Fixed manual omni_complete error.
    - Improved manual completion.
    - Fixed filtering bug.
    - Print filename when caching.
    
   3.08:
    - Implemented NeoComplCacheCachingTags command.
    - Disable auto caching in tags_complete.
    - Echo filename when caching.
    - Disabled quick match.
    - Fixed wildcard bug when auto completion.
    - Improved caching in tags_complete and include_complete.
    - Split nicely when edit snippets_file.

   3.07:
    - Added snippet indent file.
    - Fixed filter bug in include_complete.
    - Fixed matchstr timing in include_complete.
    - Fixed error when includeexpr is empty in include_complete.
    - Don't caching readonly buffer in include_complete.
    - Implemented CursorHoldI completion.
    - Deleted g:neocomplcache_SkipInputTime and g:neocomplcache_QuickMatchmax_list option.
    - Fixed keyword pattern error in include_complete.
    - Fixed quickmatch.
    - Improved caching timing.
    - Added g:neocomplcache_include_suffixes option. 

   3.06:
    - Fixed disable completion bug.
    - Optimized tags_complete.
    - Implemented cache in tags_complete.
    - Implemented include_complete.
    - Fixed regex escape bug in snippets_complete.
    - Added g:neocomplcache_enable_auto_select option.
    - Deleted g:NeoComplCache_TagsAutoUpdate option.

   3.05:
    - Set completeopt-=longest.
    - Caching buffer when CursorHold.
    - Enable auto-complete in tags_complete.
    - Fixed manual completion bug.
    - Fixed error when omnifunc is empty.
    - Improved quickmatch.
    - Changed g:neocomplcache_max_list and g:neocomplcache_QuickMatchmax_list default value.
    - Fixed skip error.
    - Implemented completion skip if previous completion is empty.
    
   3.04:
    - Expand tilde.
    - Use complete_check().
    - Add '*' to a delimiter in filename_complete.
    - Improved ps1 keyword.
    - Echo error when you use old Vim.
    - set completeopt-=menuone.
    - Deleted cpp omni support.

   3.03:
    - Added scala support.
    - Added ActionScript support in omni_complete.
    - Fixed neocomplcache#plugin#snippets_complete#expandable()'s error.
    - Call multiple complefunc if cur_keyword_pos is equal.
    - Improved snippet menu.
    - Improved keymapping in snippets_complete.

   3.02:
    - Fixed escape bug in filename_complete.
    - Deleted cdpath completion.
    - Improved filename completion.
    - Fixed fatal bug when snippet expand.
    - Fixed marker substitute bug.
    - Fixed fatal caching bug.
    - Fixed error when sh/zsh file opened.
    - Implemented filetype completion.
    - Improved html/xhtml keyword pattern.

   3.01:
    - Added select mode mappings in snippets_complete.
    - Supported same filetype lists in snippets_complete.
    - Expandable a snippet including sign.
    - Added registers snippet.
    - Changed buffer_complete cache directory.
    - Sort alphabetical order in snippets_complete.
    - Improved get cur_text in snippets_complete.
    - Implemented condition in snippets_complete.
    - Added xhtml snippet(Thanks just!).
    - Fixed css error.
    - Implemented optional placeholder.
   
   3.00:
    - Implemented multiple keyword.
    - Improved html keyword completion.
    - Improved command's completion.
    - Fixed error in snippets_complete.
    - Fixed expand cursor bug in snippets_complete.
    - Improved skip completion.
    - Splitted filename completion and omni completion and keyword completion.
    - Improved remove next keyword.
    - Renamed keyword_complete.vim as buffer_complete.vim.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 2.51-:
   2.78:
    - Supported abbr in omni completion.
    - Clear quickmatch cache when auto complete is skipped.
    - Fixed escape bug.
    - Implemented fast filter.

   2.77:
    - Improved caching message.
    - Implemented completion undo.
    - Fixed non-initialize error.
    - Fixed wildcard bug.
    - Improved quickmatch behavior.
    - Added g:neocomplcache_caching_percent_in_statusline option.
    - Fixed completion column bug.

   2.76:
    - Don't select in manual completion.
    - Clear numbered list when close popup.
    - Added snippet indent file.
    - Added NeoComplCachePrintSnippets command.
    - Supported placeholder 0.
    - Implemented sync placeholder.
    - Improved caching.
    - Supported snipMate's multi snippet.
    - Improved no new line snippet expand.
    - Fixed cursor pos bug.
    - Fixed next keyword completion bug.

   2.75:
    - Added css support.
    - Improved vim keyword.
    - Add rank if match next keyword.
    - Improved tex keyword.

   2.74:
    - Added ChangeLog.
    - Improved quick match.
    - Fixed no new line snippet expand bug in snippet completion.
    - Recognize next keyword in omni completion.
    - Optimized filename completion.
    - Ignore japanese syntax message in syntax completion.
    - Improved next keyword completion.

   2.73:
    - Improved manual completion.
    - Fixed error in manual omni completion when omnifunc is empty.
    - Improved filename completion.
    - Improved check candidate.
    - Improved omni completion.
    - Fixed dup bug in snippets_complete.

   2.72:
    - Improved quickmatch behavior.
    - Fixed expand() bug in snippets_complete.
    - Fixed prefix bug in filename completion.
    - Improved filename completion.
    - Substitute $HOME into '~' in filename completion.
    - Dispay 'cdpath' files in filename completion.
    - Dispay 'w:vimshell_directory_stack' files in filename completion.

   2.71:
    - Create g:neocomplcache_temporary_dir directory if not exists.
    - Create g:neocomplcache_snippets_dir directory if not exists.
    - Implemented direct expantion in snippet complete.
    - Implemented snippet alias in snippet complete.
    - Added g:neocomplcache_plugin_completion_length option.
    - Improved get cursour word.
    - Added Objective-C/C++ support.
    - Fixed filename completion bug when environment variable used.
    - Improved skipped behavior.
    - Implemented short filename completion.
    - Check cdpath in filename completion.
    - Fixed expand jump bug in snippets completion.

   2.70:
    - Improved omni completion.
    - Display readonly files.
    - Fixed filename completion bug.
    - No ignorecase in next keyword completion.

   2.69: - Improved quick match.
    - Fixed html omni completion error.
    - Improved html omni completion pattern.
    - Improved g:neocomplcache_ctags_arguments_list in vim filetype.
    - Delete quick match cache when BufWinEnter.
    - Convert string omni completion.

   2.68:
    - Improved quick match in filename completion.
    - Deleted g:NeoComplCache_FilenameCompletionSkipItems option.
    - Search quick match if no keyword match.
    - Fixed manual_complete wildcard bug.
    - Caching from cache in syntax_complete.
    - Added NeoComplCacheCachingSyntax command.

   2.67:
    - Fixed snippet without default value expand bug.
    - Added snippet file snippet.
    - Improved keyword pattern.
    - Insert quickmatched candidate immediately.
    - The quick match input does not make a cache.

   2.66:
    - Improved manual.
    - Fixed snippet expand bugs.
    - Caching snippets when file open.
    - g:neocomplcache_snippets_dir is comma-separated list.
    - Supported escape sequence in filename completion.
    - Improved set complete function timing.

   2.65:
    - Deleted wildcard from filename completion.
    - Fixed ATOK X3 on when snippets expanded.
    - Fixed syntax match timing(Thanks thinca!).
    - Improved vimshell keyword pattern.
    - Added snippet delete.
    - Added English manual.

   2.64:
    - Substitute \ -> / in Windows.
    - Improved NeoComplCacheCachingBuffer command.
    - Added g:neocomplcache_caching_limit_file_size option.
    - Added g:neocomplcache_disable_caching_buffer_name_pattern option.
    - Don't caching readonly file.
    - Improved neocomplcache#keyword_complete#caching_percent.

   2.63:
    - Substitute ... -> ../.. .
    - Changed short filename into ~.
    - Improved filename completion.
    - Callable get_complete_words() and word_caching_current_line() function.
    - Erb is same filetype with ruby.
    - Improved html and erb filetype.
    - Improved erb snippets.
    - Improved css omni completion.
    - Improved vimshell keyword pattern.

   2.62:
    - Added make syntax.
    - Put up the priority of directory in filename completion.
    - Draw executable files in filename completion.
    - Added g:NeoComplCache_FilenameCompletionSkipItems option.
    - Fixed filename completion bug on enable quick match.

   2.61:
    - Fixed ATOK X3 on when snippets expanded.
    - Improved vimshell syntax.
    - Improved skip completion.

   2.60: Improved filename completion.
    - Improved long filename view.
    - Improved filtering.
    - Fixed keyword sort bug.

   2.59: Fixed caching bug.

   2.58: Improved caching timing.
    - Optimized caching.

   2.57: Improved snippets_complete.
    - Fixed feedkeys.
    - Improved skip completion.
    - Changed g:NeoComplCache_PartialCompletionStartLength default value.
    - Improved camel case completion and underbar completion.
    - Fixed add rank bug in snippet completion.
    - Loadable snipMate snippets file in snippet completion.
    - Implemented _ snippets in snippet completion.

   2.56: Implemented filename completion.
    - Don't caching when not buflisted in syntax complete.
    - Implemented neocomplcache#manual_filename_complete().
    - Improved filename toriming.
    - Fixed E220 in tex filetype.
    - Improved edit snippet.

   2.55: Output cache file.
    - Added g:neocomplcache_temporary_dir option.
    - Improved garbage collect.

   2.52: Fixed bugs.
    - Changed g:NeoComplCache_PreviousKeywordCompletion default value.
    - Fixed NeoComplCacheDisable bug.
    - Fixed neocomplcache#keyword_complete#caching_percent() bug.
    - Fixed analyze caching bug.
    - Fixed quick match.
    - Improved wildcard.

   2.51: Optimized dictionary and fixed bug.
    - Deleted g:NeoComplCache_MaxTryKeywordLength options.
    - Deleted NeoComplCacheCachingDictionary command.
    - Improved caching echo.
    - Optimized calc rank.
    - Fixed abbr_save error.
    - Don't caching on BufEnter.
    - Optimized manual_complete behavior.
    - Added g:neocomplcache_manual_completion_start_length option.
    - Fixed next keyword completion bug.
    - Fixed caching initialize bug.
    - Fixed on InsertLeave error.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 2.00-2.50:
   2.50: Caching on editing file.
    - Optimized NeoComplCacheCachingBuffer.
    - Implemented neocomplcache#close_popup() and neocomplcache#cancel_popup().
    - Fixed ignore case behavior.
    - Fixed escape error.
    - Improved caching.
    - Deleted g:NeoComplCache_TryKeywordCompletion and g:NeoComplCache_TryDefaultCompletion options.
    - Deleted g:NeoComplCache_MaxInfoList and g:NeoComplCache_DeleteRank0 option.
    - Don't save info in keyword completion.

   2.44: Improved popup menu in tags completion.
    - Improved popup menu in tags completion.
    - Fixed escape error.
    - Fixed help.

   2.43: Improved wildcard.
    - Improved wildcard.
    - Changed 'abbr_save' into 'abbr'.
    - Fixed :NeoComplCacheCachingBuffer bug.

   2.42:
    - Call completefunc when original completefunc.
    - Added g:NeoComplCache_TryFilenameCompletion option.
    - Fixed g:NeoComplCache_TryKeywordCompletion bug.
    - Fixed menu padding.
    - Fixed caching error.
    - Implemented underbar completion.
    - Added g:neocomplcache_enable_underbar_completion option.

   2.41:
    - Improved empty check.
    - Fixed eval bug in snippet complete.
    - Fixed include bug in snippet complete.

   2.40:
    - Optimized caching in small files.
    - Deleted buffer dictionary.
    - Display cached from buffer.
    - Changed g:NeoComplCache_MaxInfoList default value.
    - Improved calc rank.
    - Improved caching timing.
    - Added NeoComplCacheCachingDisable and g:NeoComplCacheCachingEnable commands.
    - Fixed commentout bug in snippet complete.

   2.39:
    - Fixed syntax highlight.
    - Overwrite snippet if name is same.
    - Caching on InsertLeave.
    - Manual completion add wildcard when input non alphabetical character.
    - Fixed menu error in syntax complete.

   2.38:
    - Fixed typo.
    - Optimized caching.

   2.37:
    - Added g:NeoComplCache_SkipCompletionTime option.
    - Added g:NeoComplCache_SkipInputTime option.
    - Changed g:NeoComplCache_SlowCompleteSkip option into g:NeoComplCache_EnableSkipCompletion.
    - Improved ruby omni pattern.
    - Optimized syntax complete.
    - Delete command abbreviations in vim filetype.

   2.36:
    - Implemented snipMate like snippet.
    - Added syntax file.
    - Detect snippet file.
    - Fixed default value selection bug.
    - Fixed ignorecase.

   2.35:
    - Fixed NeoComplCacheDisable bug.
    - Implemented <Plug>(neocomplcache_keyword_caching) keymapping.
    - Improved operator completion.
    - Added syntax highlight.
    - Implemented g:neocomplcache_snippets_dir.

   2.34:
    - Increment rank when snippet expanded.
    - Use selection.
    - Fixed place holder's default value bug.
    - Added g:neocomplcache_min_syntax_length option.

   2.33:
    - Implemented <Plug>(neocomplcache_snippets_expand) keymapping.
    - Implemented place holder.
    - Improved place holder's default value behavior.
    - Enable filename completion in lisp filetype.

   2.32:
     - Implemented variable cache line.
     - Don't complete '/cygdrive/'.
     - Fixed popup preview window bug if g:NeoComplCache_EnableInfo is 0.

   2.31:
     - Optimized caching.
     - Improved html omni syntax.
     - Changed g:NeoComplCache_MaxInfoList default value.
     - Try empty keyword completion if candidate is empty in manual complete.
     - Delete candidate from source if rank is low.
     - Disable filename completion in tex filetype.

   2.30:
     - Deleted MFU.
     - Optimized match.
     - Fixed cpp keyword bugs.
     - Improved snippets_complete.

   2.29:
     - Improved plugin interface.
     - Refactoring.

   2.28:
     - Improved autocmd.
     - Fixed delete source bug when g:NeoComplCache_EnableMFU is set.
     - Implemented snippets_complete.
     - Optimized abbr.

   2.27:
     - Improved filtering.
     - Supported actionscript.
     - Improved syntax.
     - Added caching percent support.

   2.26:
     - Improved ruby and vim and html syntax.
     - Fixed escape.
     - Supported erlang and eruby and etc.
     - Refactoring autocmd.

   2.25:
     - Optimized syntax caching.
     - Fixed ruby and ocaml syntax.
     - Fixed error when g:neocomplcache_enable_alphabetical_order is set.
     - Improved syntax_complete caching event.

   2.24:
     - Optimized calc rank.
     - Optimized keyword pattern.
     - Implemented operator completion.
     - Don't use include completion.
     - Fixed next keyword bug.

   2.23:
     - Fixed compound keyword pattern.
     - Optimized keyword pattern.
     - Fixed can't quick match bug on g:neocomplcache_enable_camel_case_completion is 1.

   2.22:
     - Improved tex syntax.
     - Improved keyword completion.
     - Fixed sequential caching bug.

   2.21:
     - Fixed haskell and ocaml and perl syntax.
     - Fixed g:neocomplcache_enable_camel_case_completion default value.
     - Extend skip time.
     - Added NeoComplCacheAutoCompletionLength and NeoComplCachePartialCompletionLength command.
     - Fixed extend complete length bug.
     - Improved camel case completion.

   2.20:
     - Improved dictionary check.
     - Fixed manual complete wildcard bug.
     - Fixed assuming filetype bug.
     - Implemented camel case completion.
     - Improved filetype and filename check.

   2.19:
     - Plugin interface changed.
     - Patterns use very magic.
     - Fixed syntax_complete.

   2.18:
     - Implemented tags_complete plugin.
     - Fixed default completion bug.
     - Extend complete length when consecutive skipped.
     - Auto complete on CursorMovedI.
     - Deleted similar match.

   2.17:
     - Loadable autoload/neocomplcache/*.vim plugin.
     - Implemented syntax_complete plugin.

   2.16:
     - Fixed caching initialize bug.
     - Supported vim help file.
     - Created manual.
     - Fixed variables name.
     - Deleted g:neocomplcache_CalcRankmax_lists option.

   2.15:
     - Improved C syntax.
     - Added g:NeoComplCache_MaxTryKeywordLength option.
     - Improved prev rank.
     - Optimized if keyword is empty.

   2.14:
     - Optimized calc rank.

   2.13:
     - Optimized caching.
     - Optimized calc rank.
     - Fixed calc rank bugs.
     - Optimized similar match.
     - Fixed dictionary bug.

   2.12:
     - Added g:NeoComplCache_CachingRandomize option.
     - Changed g:neocomplcache_cache_line_count default value.
     - Optimized caching.
     - Caching current cache line on idle.
     - Fixed key not present error.
     - Fixed caching bug.

   2.11:
     - Implemented prev_rank.
     - Fixed disable auto complete bug.
     - Changed g:neocomplcache_min_keyword_length default value.
     - Changed g:neocomplcache_cache_line_count default value.
     - Fixed MFU.
     - Optimized calc rank.
     - Fixed freeze bug when InsertEnter and InsertLeave.

   2.10:
     - Divided as plugin.
     - NeoComplCacheToggle uses lock() and unlock()
     - Abbreviation indication of the end.
     - Don't load MFU when MFU is empty.
     - Changed g:AltAutoComplPop_EnableAsterisk into g:neocomplcache_enable_wildcard.
     - Added wildcard '-'.
     - Fixed key not present error.

   2.02:
     - Supported compound filetype.
     - Disable partial match when skipped.
     - Fixed wildcard bug.
     - Optimized info.
     - Added g:NeoComplCache_EnableInfo option.
     - Disable try keyword completion when wildcard.

   2.01:
     - Caching on InsertLeave.
     - Changed g:Neocomplcache_cache_line_count default value.
     - Fixed update tags bug.
     - Enable asterisk when cursor_word is (, $, #, @, ...
     - Improved wildcard.

   2.00:
     - Save keyword found line.
     - Changed g:Neocomplcache_cache_line_count default value.
     - Fixed skipped bug.
     - Improved commands.
     - Deleted g:NeoComplCache_DrawWordsRank option.

------------------------------------------------------------------------------
ChangeLog NeoComplCache 1.00-1.60:
   1.60:
     - Improved calc similar algorithm.
   1.59:
     - Improved NeoComplCacheSetBufferDictionary.
     - Fixed MFU bug.
     - Don't try keyword completion when input non word character.
   1.58:
     - Fixed s:SetOmniPattern() and s:SetKeywordPattern() bugs.
     - Changed g:neocomplcache_min_keyword_length default value.
     - Implemented same filetype completion.
   1.57:
     - Deleted g:NeoComplCache_FirstHeadMatching option. 
     - Deleted prev_rank.
     - Implemented 3-gram completion.
     - Fixed MFU bug.
   1.56:
     - Use vim commands completion in vim filetype.
   1.55:
     - Implemented NeoComplCacheCreateTags command.
     - Fixed tags auto update bug.
     - Added g:NeoComplCache_TryKeywordCompletion option.
   1.54:
     - Added tags syntax keyword.
     - Implemented local tags.
     - Implemented local tags auto update.
     - Fixed s:prepre_numbered_list bug.
   1.53:
     - Disable similar completion when auto complete.
     - Calc rank when NeoComplCacheCachingBuffer command.
     - Added NeoComplCacheOutputKeyword command.
   1.52:
     - Fixed syntax keyword bug.
     - Improved syntax keyword.
     - Implemented similar completion.
   1.51:
     - Added g:NeoComplCache_PartialCompletionStartLength option.
     - Fixed syntax keyword bug.
   1.50:
     - Deleted g:NeoComplCache_CompleteFuncLists.
     - Set filetype 'nothing' if filetype is empty.
     - Implemented omni completion.
     - Added debug command.
     - Improved syntax keyword.
   1.49:
     - Fixed g:NeoComplCache_MFUDirectory error.
     - Changed g:neocomplcache_keyword_patterns['default'] value.
   1.48:
     - Implemented NeoComplCacheSetBufferDictionary command.
     - Implemented 2-gram MFU.
     - Improved syntax completion.
     - Fixed "complete from same filetype buffer" bug.
   1.47:
     - Implemented 2-gram completion.
     - Improved ruby keyword.
   1.46:
     - Complete from same filetype buffer.
   1.45:
     - Fixed g:NeoComplCache_MFUDirectory bug.
     - Improved syntax keyword.
     - Deleted g:NeoComplCache_FirstCurrentBufferWords option.
     - Implemented previous keyword completion.
   1.44:
     - Improved most frequently used dictionary.
     - Improved if bufname changed.
     - Restore wildcard substitution '.\+' into '.*'.
     - Fixed next keyword completion bug.
   1.43:
     - Refactoring when caching source.
     - Initialize source if bufname changed.
     - Implemented most frequently used dictionary.
   1.42:
     - Caching when InsertLeave event.
     - Changed g:neocomplcache_cache_line_count value.
     - Changed wildcard substitution '.*' into '.\+'.
     - Allow word's tail '*' if g:NeoComplCache_EnableAsterisk.
     - Allow word's head '*' on lisp.
     - Allow word's head '&' on perl.
     - Optimized global options definition.
   1.41:
     - Added g:neocomplcache_enable_smart_case option.
     - Optimized on completion and caching.
     - Fixed g:NeoComplCache_ManualCompleteFunc bug.
   1.40:
     - Fixed freeze bug when many - inputed.
     - Improved next keyword completion.
     - Improved caching.
     - Fixed next keyword completion bug.
   1.39:
     - Fixed filename completion bug.
     - Fixed dup bug.
     - Implemented next keyword completion.
   1.38:
     - Fixed PHP completion bug.
     - Improved filetype detection.
     - Added space between keyword and file name.
     - Implemented randomize rank calculation.
     - Added g:NeoComplCache_CalcRankRandomize option.
   1.37:
     - Improved file complete.
     - Fixed file complete bug.
   1.36:
     - Added g:NeoComplCache_FirstHeadMatching option.
     - Fixed list order bug.
     - Changed g:neocomplcache_QuickMatchmax_lists default value.
     - Optimized when buffer renamed.
   1.35:
     - Improved syntax complete.
     - Improved NeoComplCacheToggle.
   1.34:
     - Fixed g:NeoComplCache_FirstCurrentBufferWords bug.
     - Fixed quick match bug.
     - Not change lazyredraw.
   1.33:
     - Added g:neocomplcache_QuickMatchmax_lists option.
     - Changed g:NeoComplCache_QuickMatch into g:NeoComplCache_QuickMatchEnable.
     - Implemented two digits quick match.
   1.32:
     - Improved completion cancel.
     - Improved syntax keyword vim, sh, zsh, vimshell.
     - Implemented g:NeoComplCache_NonBufferFileTypeDetect option.
   1.31:
     - Added g:neocomplcache_min_keyword_length option.
     - Caching keyword_pattern.
     - Fixed current buffer filtering bug.
     - Fixed rank calculation bug.
     - Optimized keyword caching.
     - Fixed lazyredraw bug.
   1.30:
     - Added NeoCompleCachingTags, NeoComplCacheDictionary command.
     - Renamed NeoCompleCachingBuffer command.
   1.29:
     - Added NeoComplCacheLock, NeoComplCacheUnlock command.
     - Dup check when quick match.
     - Fixed error when manual complete.
   1.28:
     - Improved filetype detection.
     - Changed g:neocomplcache_max_filename_width default value.
     - Improved list.
   1.27:
     - Improved syntax keyword.
     - Improved calc rank timing.
     - Fixed keyword filtering bug.
   1.26:
     - Ignore if dictionary file doesn't exists.
     - Due to optimize, filtering len(cur_keyword_str) >.
     - Auto complete when InsertEnter.
   1.25:
     - Exclude cur_keyword_str from keyword lists.
   1.24:
     - Due to optimize, filtering len(cur_keyword_str) >=.
     - Fixed buffer dictionary bug.
   1.23:
     - Fixed on lazyredraw bug.
     - Optimized when no dictionary and tags.
     - Not echo calculation time.
   1.22:
     - Optimized source.
   1.21:
     - Fixed overwrite completefunc bug.
   1.20:
     - Implemented buffer dictionary.
   1.10:
     - Implemented customizable complete function.
   1.00:
     - Renamed.
     - Initial version.

------------------------------------------------------------------------------
ChangeLog AltAutoComplPop:
   2.62:
     - Set lazyredraw at auto complete.
     - Added g:AltAutoComplPop_CalcRankMaxLists option.
     - Improved calc rank timing.
     - Improved filetype check.
   2.61:
     - Improved keyword patterns.
     - Changed g:AltAutoComplPop_CacheLineCount default value.
     - Implemented :Neco command.
   2.60:
     - Cleanuped code.
     - Show '[T]' or '[D]' at completing.
     - Implemented tab pages tags completion.
     - Fixed error when tab created.
     - Changed g:AltAutoComplPop_CalcRankCount default value.
   2.50:
     - Implemented filetype dictionary completion.
   2.14:
     - Fixed 'Undefined Variable: s:cur_keyword_pos' bug.
     - Implemented tags completion.
   2.13:
     - Added g:AltAutoComplPop_DictionaryLists option.
     - Implemented dictionary completion.
   2.12:
     - Added g:AltAutoComplPop_CalcRankCount option.
   2.11:
     - Added g:AltAutoComplPop_SlowCompleteSkip option.
     - Removed g:AltAutoComplPop_OptimizeLevel option.
   2.10:
     - Added g:AltAutoComplPop_QuickMatch option.
     - Changed g:AltAutoComplPop_MaxList default value.
     - Don't cache help file.
   2.09:
     - Added g:AltAutoComplPop_EnableAsterisk option.
     - Fixed next cache line cleared bug.
   2.08:
     - Added g:AltAutoComplPop_OptimizeLevel option.
       If list has many keyword, will optimize complete. 
     - Added g:AltAutoComplPop_DisableAutoComplete option.
   2.07:
     - Fixed caching miss when BufRead.
   2.06:
     - Improved and customizable keyword patterns.
   2.05:
     - Added g:AltAutoComplPop_DeleteRank0 option.
     - Implemented lazy caching.
     - Cleanuped code.
   2.04:
     - Fixed caching bug.
   2.03:
     - Fixed rank calculation bug.
   2.02:
     - Fixed GVim problem at ATOK X3
   2.01:
     - Fixed rank calculation bug.
     - Faster at caching.
   2.0:
     - Implemented Updates current buffer cache at InsertEnter.
   1.13:
     - Licence changed.
     - Fix many bugs.
   1.1:
     - Implemented smart completion.
       It works in vim, c, cpp, ruby, ...
     - Implemented file completion.
   1.0:
     - Initial version.

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:fdl=0:noet:
